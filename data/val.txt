_images
READ
   
_test
((
D
,
 the
 loss
 attention
 loss
 test
()

 model
 tf
 if
 as
(img
   
 dest
,
 Low
000
_h
               
   
 print
_train
_train
0
,
_test
 max
 if
           
 machine
.figure
 i
 =
 
_test
 epochs
 (
 Functions
   
_pixel
def
_test
.path
_folder
,
x
 be
 dependencies
 Super
 callbacks
 Usage
_data
5
 Predict
 save
 Add
 save
.c
num
   
.
   
('
_pixel
ropped
 high
ampled
 os
_res
_path
 =
):



_layer
    

(x
 extract
:

si
/
_ms
       
.exists
same
.makedirs
],
_argument
D
──
2
-
_path
_blocks
 filters
.array
 os
 for
--
.h
_and
_rgb
,
_state
 RGB
 (
 not
_test
pectral
_path
 main
):

 y
_split
,
 target
 *
)


2
 and
,
 =
 dataset
Downloading
       
_adj
   
 encoder
 Le
   
:w
 os
           
2
 learning
_selection
_size
 rate
64
 
),
   
 #
_res
 v
_res
_res
].
bash
_res
       
 print
,
_and
complete
_per
Accuracy
,
 '
 y
,
 by
 x
`
   
 x
_and
_res
 parser
 from
='
):

 =
_test
 X
```
.cs
_and
 
,
,
_hi
a
,
_model
 indices
)

Average
 #
_model
  
:
 high
 print
_res
 os
,
x
point
 X
_res
_res
-



 save
   
6
.

       
>


("
 ground
(sub
')

   
 :
,
(url
_images
_path
 encoder
_low
ven
   
')

.models
 high
 Check
 padding
Learning
/d
 for
_low
_blocks
 import
_path
dir
 accuracy
 learning
,
CA
def
1
 super
=args
ing
 subdir
Open
 the
.py
(optimizer
 completed
(num
save
-
 Col
 epochs
 Input
.

 i
 In
   
](
 README
=args
 continue
 =
resolution
 for
64
_low
``
.py
 y
_h
zip
,
 if
_low
   
,
 extracted
 
64
='
 cropped
 np
20
 np
   
---


_layer
 range
 =
)

 --
 and
 /
=args
 plt
  
_filters
.path
 Adam
,
Validation
 python
 Create
_high
.title
D
_pool
 #
=int
           
_test
02
,
 a
  
 return
optimizer
_img
512
 history
2
 href
 Batch
,
 plt
_rgb
_adj
 my
si
).

_epoch
 =
')
_samples
,
 generate
_test
 print
_path
 else
 predicted
_h


---


 =
 Le
###
 concatenate
 `
   
 blocks
_rgb
 input
 y
 the
si
  
 model
Res



.png
_layer
 Conv
 main
 loss
 =
 X
hape
---


-python
 return
 if
Prediction


_res
 in
 max
 i
 device
 batch
   
'

_residual
 num
.layers
(shape
(predictions
plots
 plot
.path
_low
 the
))(
_layer
       
 ```
 the
 :,
 to
(
_res
_h
 num
_block
 =
x


_img


 model
,
_samples
)


_res
resolution
 if


 =
